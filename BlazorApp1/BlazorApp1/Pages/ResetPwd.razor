@page "/ResetPwd" 
@using MongoDB.Driver; 
@using System.Net.Mail;
@using System.Net;
@inject NavigationManager NavManager 
<PageTitle>Reset Password</PageTitle>
<link href="/css/registerStylesheet.css" rel="stylesheet" />
<html> 
    <body>

    @if (!reset)
    {

        <div class="registerborder">
            <div class="register">

                <div class="header">
                    <h3>Forgot Password</h3>
                </div>

                <div class="reg">
                    <label>Email</label>
                    <input @bind="model.UserName" type="text" placeholder="Email" />
                </div>

                <button type="submit" @onclick="boolReset" class="buttonRegister" runat="server" CausesValidation="False">Reset password</button>

                <div class="container2">
                    <span class="login">Back to login <a href="Login">Sign in</a></span>
                </div>

            </div>
        </div>

    }
    else
    {

        <div class="registerborder">
            <div class="register">

                <div class="header">
                    <h3>Forgot Password</h3>
                </div>

                <div class="reg">
                    <label>New password</label> <input @bind="model.Password" type="password" placeholder="Password" />
                </div>

                <div class="reg">
                    <label>Confirm password</label>
                    <input @bind="model.Password2" type="password" placeholder="Password" />
                </div>

                <button type="submit" @onclick="onRegisterClick" class="buttonRegister" runat="server" CausesValidation="False">Reset password</button>

                <div class="container2">
                    <span class="login">Back to login <a href="Login">Sign in</a></span>
                </div>

                <div class="container" style=@curCSS>
                    <span>Passwords don`t match</span>
                </div>

            </div>
        </div>

    }
    <!--
        <div class="registerborder"> 
            <div class="register"> 
                <div class="header"> 
                    <h3>Forgot Password</h3> 
                    </div> 

                    

                    <div class="reg"> 
                        <label>Email</label> 
                        <input @bind="model.UserName" type="text" placeholder="Email"/> 
                    </div> 

                        <div class="reg"> 
                            <label>New password</label> <input @bind="model.Password" type="password" placeholder="Password" /> 
                        </div> 

                        <div class="reg"> 
                            <label>Confirm password</label> 
                            <input @bind="model.Password2" type="password" placeholder="Password" /> 
                        </div> 

                        <button type="submit" @onclick="onRegisterClick" class="buttonRegister" runat="server" CausesValidation="False">Reset password</button> 
                        
                        <div class="container2"> 
                            <span class="login">Back to login <a href="Login">Sign in</a></span> 
                        </div> 

                        <div class="container" style=@curCSS> 
                            <span>Passwords don`t match</span> 
                        </div> 

                    </div>
                </div>
                -->
            </body>
    </html>
 @code 
{
    private class Model 
    { 
        public string UserName { get; set; } 
        public string Password { get; set; } 
        public string Password2 { get; set; } 
    }
    private Model model = new Model(); 
    string shownCSS = "margin-top: 15px; border-radius: 5px; background-color:#ffdce4; color: darkred;"; 
    string curCSS = "margin-top: 15px; border-radius: 5px; background-color:#ffdce4; color: darkred; display:none";

    bool reset = true;



    public void onRegisterClick() 
    { 
        if(model.Password == model.Password2 && model.Password != null && model.Password2 != null) 
        { 
            var client = new MongoClient("mongodb+srv://Flo:shelly123@shelly.ikeunhp.mongodb.net/?retryWrites=true&w=majority");
            var mongodb = client.GetDatabase("BenutzerDatabase");
            var collection = mongodb.GetCollection<Benutzer>("Benutzer");

            var filter = Builders<Benutzer>.Filter.Eq("Email", model.UserName);

            if (collection.Find(filter) != null)
            {
                var updater = Builders<Benutzer>.Update.Set("Passwort", model.Password);
                collection.FindOneAndUpdate(filter, updater);
                NavManager.NavigateTo("Login");
            }
        } 
        else
        { 
            curCSS = shownCSS; 
        } 
    }

    public void boolReset()
    {
        reset = true;
    }

}