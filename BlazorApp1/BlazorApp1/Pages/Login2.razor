@page "/Login"
@using BlazorApp1.Authentication;
@using MongoDB.Driver;
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<PageTitle>Login</PageTitle>

<link href="/css/loginStylesheet.css" rel="stylesheet" />
<html>    
    <body>        
        <div class="loginborder">            
            <div class="login">                
                <div class="header">                    
                    <h3>Login</h3>                
                </div>                
                <div class="log">                    
                    <label>Email</label>                    
                    <input @bind="model.UserName" type="text" placeholder="Email"/>                
                </div>                
                <div class="log">                    
                    <label>Passwort</label>                    
                    <input @bind="model.Password" type="password" placeholder="Passwort"/>                
                </div>                
                <button @onclick="Authenticate" class="buttonLogin">Login</button>                
                <div class="container2">                    
                    <span>Don't have an Account? <a href="Register">Sign up</a></span>                    
                    <span style="float: right;">Forgot <a href="ResetPwd">password</a>?</span>                
                </div>                
                <div class="container" style=@curCSS>                    
                    <span>Your password is incorrect or this account doesn't exist.</span>                    
                    <span style="white-space: nowrap;">Please try again or <a href="resetPwd" style="color: darkred">reset your password</a>.</span>                
                </div>            
            </div>        
        </div>    
    </body>
</html>


@code {

    private class Model
    {
        public string UserName { get; set; }
        public string Password{ get; set; }
    }

    private Model model = new Model();

    string shownCSS = "margin-top: 15px; border-radius: 5px; background-color:#ffdce4; color: darkred;";
    string curCSS = "margin-top: 15px; border-radius: 5px; background-color:#ffdce4; color: darkred; display:none";

    private async Task Authenticate()
    {
        var client = new MongoClient("mongodb+srv://Flo:shelly123@shelly.ikeunhp.mongodb.net/?retryWrites=true&w=majority");
        var mongodb = client.GetDatabase("BenutzerDatabase");
        var collection = mongodb.GetCollection<Benutzer>("Benutzer");

        var filter = Builders<Benutzer>.Filter.Eq("Email", model.UserName);

        var benutzer = collection.Find(filter).FirstOrDefault();

        if (benutzer == null || benutzer.Passwort != model.Password)
        {
            curCSS = shownCSS;
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                UserName = benutzer.Email,
                Role = benutzer.Role
            });
        navManager.NavigateTo("Dashboard", true);
    }
}
