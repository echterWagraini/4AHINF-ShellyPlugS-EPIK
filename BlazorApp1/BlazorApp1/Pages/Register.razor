@page "/Register"
@using MongoDB.Bson;
@using MongoDB.Driver;
@inject NavigationManager NavManager
@inject IJSRuntime js

<PageTitle>Register</PageTitle>

<PageTitle>Register</PageTitle>
<link href="/css/registerStylesheet.css" rel="stylesheet" />
<html>
    <body>
        <div class="registerborder">            
            <div class="register">                
                <div class="header">                    
                    <h3>Register</h3>                
                </div>                
                <div class="reg">                    
                    <label>Email</label>                    
                    <input @bind="model.userNameInput" type="text" placeholder="Email" />                
                </div>                
                <div class="reg">                    
                    <label>Passwort</label>                    
                    <input @bind="model.passwordInput" type="password" placeholder="Passwort" />                
                </div>                
                <div class="reg">                    
                    <label>Passwort wiederholen</label>                    
                    <input @bind="model.passwordInput2" type="password" placeholder="Passwort" />                
                </div>                
                <button type="submit" @onclick="onRegisterClick" class="buttonRegister" runat="server" CausesValidation="False">Sign up</button>                
                <div class="container2">                    
                    <span>Already have an Account? <a href="Login">Sign in</a></span>                
                </div>            
            </div>        
        </div>
    </body>
</html>

@code
{
    private class Model
    {
        public string userNameInput { get; set; }
        public string passwordInput { get; set; }
        public string passwordInput2{ get; set; }
    }

    private Model model = new Model();

    public void onRegisterClick()
    {
        try{
            var client = new MongoClient("mongodb+srv://Flo:shelly123@shelly.ikeunhp.mongodb.net/?retryWrites=true&w=majority");
            var mongodb = client.GetDatabase("BenutzerDatabase");
            var collection = mongodb.GetCollection<Benutzer>("Benutzer");

            if (model.passwordInput == model.passwordInput2)
            {
                Benutzer newBenutzer = new Benutzer()
                    {
                        Email = model.userNameInput,
                        Passwort = model.passwordInput,
                        Role = "user",
                        Plugs = new List<Plug>(),
                        Notifications =new List<Notification>()
            };

                collection.InsertOne(newBenutzer);
            }
            NavManager.NavigateTo("Login");
        }
        catch (MongoWriteException e)
        {
            js.InvokeVoidAsync("alert","An Error occured: "+e.Message);
        }
        catch (Exception ex)
        {
            js.InvokeVoidAsync("alert", "An error occured while trying to create your Account! Please try again later!"+ex.GetType().ToString()+" "+ex.Message);
        }
    }
}
