@page "/Register"
@using MongoDB.Driver;
@inject NavigationManager NavManager
@inject IJSRuntime js

<PageTitle>Register</PageTitle>

<html>
<link href="/css/stylesheet.css" rel="stylesheet" />
<body>
    <h2>Register</h2>
    <div class="container">
        <label><b>Username oder Email</b></label>
        <input type="text" @bind="model.userNameInput" placeholder="Enter Username" id="userName" name="userName" runat="server" required>

        <label><b>Passwort</b></label>
        <input type="password" @bind="model.passwordInput" placeholder="Enter Password" name="psw" required>

        <label><b>Passwort wiederholen</b></label>
        <input type="password" @bind="model.passwordInput2" placeholder="Enter Password" name="psw" required>

        <button type="submit" @onclick="onRegisterClick" runat="server" CausesValidation="False">Sign up</button>
    </div>
    <div class="container" style="background-color: #121212;color:white;border-radius: 10px;">
        <span class="login">Already have an Account? <a href="Login">Sign in</a></span>
    </div>
</body>
</html>

@code
{
    private class Model
    {
        public string userNameInput { get; set; }
        public string passwordInput { get; set; }
        public string passwordInput2{ get; set; }
    }

    private Model model = new Model();

    public void onRegisterClick()
    {
        try{
            var client = new MongoClient("mongodb+srv://Flo:shelly@shelly.ikeunhp.mongodb.net/?retryWrites=true&w=majority");
            var mongodb = client.GetDatabase("BenutzerDatabase");
            var collection = mongodb.GetCollection<Benutzer>("Benutzer");

            if (model.passwordInput == model.passwordInput2)
            {
                Benutzer newBenutzer = new Benutzer()
                    {
                        Email = model.userNameInput,
                        Passwort = model.passwordInput,
                        Role = "user"
                };
                collection.InsertOne(newBenutzer);
            }
            NavManager.NavigateTo("Login");
        }
        catch
        {
            js.InvokeVoidAsync("alert", "An error occured while trying to create your Account! Please try again later!");
        }
    }
}
